name: Docker Compose CI

on:
  push:
    branches:
      - master

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: me-south-1

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ secrets.IMAGE_URI }}

    - name: Deploy to EC2 via SSM
      run: |
        aws ssm send-command \
          --document-name "AWS-RunShellScript" \
          --comment "Deploying latest Docker image" \
          --instance-ids ${{ secrets.INSTANCE_ID }} \
          --region me-south-1 \
          --parameters 'commands=[
            "sudo -u ubuntu bash -c \"\
              aws ecr get-login-password --region me-south-1 | docker login --username AWS --password-stdin $(echo ${{ secrets.IMAGE_URI }} | sed 's/:.*//') && \
              docker stop todo-app || true && \
              docker rm todo-app || true && \
              docker pull ${{ secrets.IMAGE_URI }}:latest && \
              docker network create app-net || true && \
              docker run -d --name todo-app --network app-net --env-file /home/ubuntu/.env -p 127.0.0.1:3000:3000 ${{ secrets.IMAGE_URI }}:latest && \
              docker ps \
            \""
          ]' \
          --output text

